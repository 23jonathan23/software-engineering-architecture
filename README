# Pirâmede da arquitetura de software

## 1 - Fundamentos

**a) Visão estratégica**
- Visão dos stakeholders
- Definição se o projeto vai funcionar a longo, médio ou a curto prazo
- Se é ou não reutilizável
- Recursos (Financeiro)

**b) Visão Funcional**
- Visão macro
- Entendimento do problema
- Funcionalidades para solucionar o problema
- Entendimento dos processos de negócio

**c) Requisitos de arquitetura (RAs)**
- Requisitos não funcionais
    - Desempenho
    - Plataformas
    - Segurança
- Requisitos funcionais
    - Casos de uso
    - Processos
    - Regras de negócio
	
- Questões legais
   - LGPD
   - PSI

## 2 - Modelo Arquitetural
- Monolítico
- Semi monolítico
- Micro componentizados (microsserviços)


## 3 - Abordagens
- Design Patterns (solução a nível código)
- TDD
- DDD

## 4 - Padrões Arquiteturais
- Define a estrutura do projeto (solução a nível de estrutura). Cada padrão tem um cenário onde ele pode ser utilizado e o problema que ele resolve.
- Exemplos:
   - MVC
   - Event-driven architecture
   - Clean architecture

## 5 - Tecnologias
- Para definir as tecnologias utilizadas, leva-se em consideração orçamento, tempo, cenário de desenvolvedores da empresa, curva de aprendizado, maturidade da tecnologia, entre outros…
- Exemplos:
   - .NET com C#
   - Flutter
   - React Native

## 6- Componentes arquiteturais
- Definição de quais são os ferramentais necessários para resolver o problema de forma mais simples
- Exemplos:
   - SQL Server
   - Kafka
   - Mongo DB
   - RabbitMQ
   - Docker

##  Visão  
Por fim, apresenta-se aos interessados as decisões fundamentadas que foram tomadas.

### Pontos importantes:
- Regras de negócio - definem como o seu negócio funciona. Em termos simples, basicamente é como sua empresa faz negócio. Elas são implementadas dentro de cada processo e representam as exigências/restrições de como o processo deve ser executado.